def generate_magic_square(n):
    if n % 2 == 0: #Проверяем, является ли n чётным
         raise ValueError("Этот метод работает только для нечётных n.") #Если n чётное, вызываем исключение с сообщением

    magic_square = [[0] * n for _ in range(n)] #Создаем пустой квадрат размреа nxn, заполненный нулями
    i = 0
    j = n // 2 #Устанавливаем начальную позицию: первая строка, середина

    for num in range(1, n * n + 1): #Проходим по числам от 1 до n^2 включительно
        magic_square[i][j] = num #Записываем текущее число в текущую ячейку

        new_i = (i - 1) % n
        new_j = (j + 1) % n #Вычисляем новую позицию "наверх и направо" по кругу

        if magic_square[new_i][new_j]: #Если новая ячейка не занята
            i = (i + 1) % n #спускаемся вниз, оставаясь в том же столбце
        else:
            i = new_i
            j = new_j #иначе переходим в рассчитанную новую позицию

    return magic_square

n = int(input("Введите нечётное число n: "))

if n % 2 == 0:
    print("Ошибка: необходимо ввести нечётное число.")
else:
    magic_square = generate_magic_square(n)
    for row in magic_square: #Перебираем строки магического квадрата
        print(*row) #Печатаем строку, элементы разделены пробелами